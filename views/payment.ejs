<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Subscribe to Premium</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://js.stripe.com/v3/"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet" />
  <style>
    :root {
      --primary: #6366f1;
      --primary-dark: #4f46e5;
      --background: #f9fafb;
      --text: #1f2937;
      --muted: #6b7280;
      --error: #ef4444;
    }
    * { box-sizing: border-box; }
    body {
      margin: 0;
      font-family: 'Inter', sans-serif;
      background-color: var(--background);
      color: var(--text);
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 1rem;
    }
    .container {
      background: #ffffff;
      max-width: 480px;
      width: 100%;
      padding: 2.5rem;
      border-radius: 1rem;
      box-shadow: 0 12px 50px rgba(0, 0, 0, 0.08);
      transition: all 0.3s ease-in-out;
    }
    h1 { 
      font-size: 1.8rem; 
      font-weight: 700; 
      margin-bottom: 0.25rem; 
      text-align: center;
    }
    .subtitle {
      font-size: 1rem;
      color: var(--muted);
      text-align: center;
      margin-bottom: 2rem;
    }
    .price-highlight { 
      font-weight: 600; 
      color: var(--primary);
    }
    .payment-options {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
      margin-bottom: 2rem;
    }
    .pay-option {
      background: #f3f4f6;
      border: 1px solid #e5e7eb;
      padding: 0.75rem 1rem;
      border-radius: 0.75rem;
      font-weight: 500;
      text-align: center;
      cursor: pointer;
      transition: all 0.2s ease;
    }
    .pay-option:hover {
      background-color: #e0e7ff;
      border-color: #c7d2fe;
    }
    .pay-option:active {
      transform: scale(0.97);
      background-color: #e0e7ff;
    }
    .card-section {
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.4s ease;
    }
    .card-section.active {
      max-height: 1000px;
      margin-bottom: 1.5rem;
    }
    .card-box {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    #card-element {
      padding: 0.75rem 1rem;
      border: 1px solid #d1d5db;
      border-radius: 0.5rem;
      background-color: #fff;
    }
    #card-errors {
      color: var(--error);
      font-size: 0.9rem;
      margin-top: -0.5rem;
    }
    #submit {
      background-color: var(--primary);
      color: white;
      padding: 0.75rem;
      font-size: 1rem;
      font-weight: 600;
      border: none;
      border-radius: 0.5rem;
      cursor: pointer;
      transition: background-color 0.2s ease;
      width: 100%;
    }
    #submit:hover {
      background-color: var(--primary-dark);
    }
    button:disabled { opacity: 0.7; cursor: not-allowed; }
    .loader { font-size: 1rem; }
    .footer {
      margin-top: 2rem;
      font-size: 0.85rem;
      color: var(--muted);
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Subscribe to Premium</h1>
    <p class="subtitle">Unlock all features for just <span class="price-highlight">₹1499/month</span></p>

    <div class="payment-options" id="payment-options">
      <div class="pay-option active" id="card-button">Pay with Card</div>
      <div class="pay-option" disabled>Google Pay (Coming soon)</div>
      <div class="pay-option" disabled>Apple Pay (Coming soon)</div>
    </div>

    <div class="card-section" id="card-section">
      <form id="payment-form" class="card-box">
        <div id="card-element"></div>
        <div id="card-errors" role="alert"></div>
        <button type="submit" id="submit">
          <span class="btn-text">Pay ₹1499 & Upgrade</span>
          <span class="loader" style="display: none; margin-left: 8px;">⏳</span>
        </button>
      </form>
    </div>

    <div class="footer">Your payment is secure and encrypted.</div>
  </div>

  <script src="https://js.stripe.com/v3/"></script>
  <script>
    // Assume 'user' and 'authToken' are stored in localStorage
    const userData = localStorage.getItem('user');
    const token = localStorage.getItem('authToken');
    if (!token) {
      alert('Please log in first.');
      window.location.href = '/login';
    }

    const stripe = Stripe('<%= STRIPE_PUBLIC_KEY %>');
    const elements = stripe.elements();
    const cardElement = elements.create("card");
    cardElement.mount("#card-element");

    const cardBtn = document.getElementById("card-button");
    const cardSection = document.getElementById("card-section");

    cardBtn.addEventListener("click", () => {
      document.querySelectorAll(".pay-option").forEach(btn => btn.classList.remove("active"));
      cardBtn.classList.add("active");
      cardSection.classList.add("active");
    });

    const form = document.getElementById("payment-form");

    // Parse user data from localStorage (assuming it's stored as JSON)
    let user = {};
    try {
      user = JSON.parse(userData);
    } catch (e) {
      console.error("User data parse error:", e);
      alert("Invalid user data. Please log in again.");
      window.location.href = "/login";
    }
    const customerName = user.fullName;
    const customerEmail = user.email;

    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const submitBtn = document.getElementById("submit");
      submitBtn.disabled = true;
      const btnText = submitBtn.querySelector(".btn-text");
      const loader = submitBtn.querySelector(".loader");
      btnText.textContent = "Processing...";
      loader.style.display = "inline";

      // Create the PaymentMethod using Stripe Elements
      const { paymentMethod, error } = await stripe.createPaymentMethod({
        type: "card",
        card: cardElement,
        billing_details: { email: customerEmail }
      });

      if (error) {
        document.getElementById("card-errors").textContent = error.message;
        submitBtn.disabled = false;
        btnText.textContent = "Pay ₹1499 & Upgrade";
        loader.style.display = "none";
        return;
      }

      // Send the PaymentMethod ID along with customer details to your subscription endpoint
      const res = await fetch("/api/subscriptions/subscribe-plan", {
        method: "POST",
        headers: { "Content-Type": "application/json", 'Authorization': token },
        body: JSON.stringify({
          paymentMethodId: paymentMethod.id,
          customerEmail,
          plan: "premium"
        })
      });

      const result = await res.json();

      if (result.statusCode === 200) {
        // Use the subscription ID from the response.
        // In this auto-charge flow, client_secret is null since payment is taken automatically.
        alert(`Subscription successful! Your Subscription ID is: ${result.data.subscriptionId}`);

        // Optionally, store the subscription ID in localStorage:
        localStorage.setItem("subscriptionId", result.data.subscriptionId);

        // Redirect to dashboard or another page after a delay.
        // setTimeout(() => { window.location.href = '/dashboard'; }, 2000);
      } else {
        alert("Something went wrong!");
        submitBtn.disabled = false;
        btnText.textContent = "Pay ₹1499 & Upgrade";
        loader.style.display = "none";
        console.error(result.data.msg);
      }
    });
  </script>
</body>
</html>
