<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <title>Subscribe to Premium</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://js.stripe.com/v3/"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet" />
  <style>
    :root {
      --primary: #6366f1;
      --primary-dark: #4f46e5;
      --background: #f9fafb;
      --text: #1f2937;
      --muted: #6b7280;
      --error: #ef4444;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Inter', sans-serif;
      background-color: var(--background);
      color: var(--text);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

    .navbar {
      background-color: #1e293b;
      color: #fff;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }

    .navbar h2 a {
      font-size: 1.5rem;
      color: #fff;
      text-decoration: none;
    }

    .navbar div a {
      color: #cbd5e1;
      margin-left: 1.5rem;
      text-decoration: none;
      font-weight: 500;
      transition: color 0.3s ease;
    }

    .navbar div a:hover {
      color: #ffffff;
    }

    .main-content {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 2rem 1rem;
      width: 100%;
      position: relative;
      min-height: calc(100vh - 80px);
    }

    .container {
      background: #ffffff;
      min-height: 500px;
      max-width: 480px;
      width: 100%;
      padding: 2.5rem;
      border-radius: 1rem;
      box-shadow: 0 12px 50px rgba(0, 0, 0, 0.08);
      transition: all 0.3s ease-in-out;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

    h1 {
      font-size: 1.8rem;
      font-weight: 700;
      margin-bottom: 0.25rem;
      text-align: center;
    }

    .subtitle {
      font-size: 1rem;
      color: var(--muted);
      text-align: center;
      margin-bottom: 2rem;
    }

    .price-highlight {
      font-weight: 600;
      color: var(--primary);
    }

    .payment-options {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
      margin-bottom: 2rem;
    }

    .payment-options-wrapper {
      display: flex;
      flex-direction: column;
    }

    .card-section {
      overflow: hidden;
      max-height: 0;
      transition: max-height 0.5s ease;
      margin-top: 0;
    }

    .card-section.active {
      max-height: 500px;
      margin-top: 1rem;
    }

    .pay-option.active {
      background-color: #e0e7ff;
      border-color: #c7d2fe;
    }

    .pay-option {
      background: #f3f4f6;
      border: 1px solid #e5e7eb;
      padding: 0.75rem 1rem;
      border-radius: 0.75rem;
      font-weight: 500;
      text-align: center;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .pay-option:hover {
      background-color: #e0e7ff;
      border-color: #c7d2fe;
    }

    .pay-option:active {
      transform: scale(0.97);
      background-color: #e0e7ff;
    }

    .card-section {
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.4s ease;
    }

    .card-section.active {
      max-height: 1000px;
      margin-bottom: 1.5rem;
    }

    .card-box {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    #card-element {
      padding: 0.75rem 1rem;
      border: 1px solid #d1d5db;
      border-radius: 0.5rem;
      background-color: #fff;
    }

    #card-errors {
      color: var(--error);
      font-size: 0.9rem;
      margin-top: -0.5rem;
    }

    #submit {
      background-color: var(--primary);
      color: white;
      padding: 0.75rem;
      font-size: 1rem;
      font-weight: 600;
      border: none;
      border-radius: 0.5rem;
      cursor: pointer;
      transition: background-color 0.2s ease;
      width: 100%;
    }

    #submit:hover {
      background-color: var(--primary-dark);
    }

    button:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }

    .loader {
      font-size: 1rem;
    }

    .footer-inside {
      text-align: center;
      margin-top: 2rem;
      font-size: 0.9rem;
      color: #94a3b8;
    }

    .global-footer {
      text-align: center;
      padding: 1rem;
      font-size: 0.9rem;
      color: #94a3b8;
      width: 100%;
      position: absolute;
      bottom: 0;
      left: 0;
    }

    @media (max-width: 600px) {
      .navbar {
        flex-direction: column;
        align-items: flex-start;
      }

      .navbar div a {
        margin: 0.5rem 1rem 0 0;
      }
    }
  </style>
</head>

<body>

  <div class="navbar">
    <h2><a href="/dashboard">üöó Parking Dashboard</a></h2>
    <div>
      <a href="/subscribe"><i class="fas fa-crown"></i> Premium</a>
      <a href="/profile"><i class="fas fa-user"></i> Profile</a>
      <a href="#" onclick="logoutUser()"><i class="fas fa-sign-out-alt"></i> Logout</a>
    </div>
  </div>

  <div class="main-content">
    <div class="container">
      <h1>Subscribe to Premium</h1>
      <p class="subtitle">Unlock all features for just <span class="price-highlight">‚Çπ1499/month</span></p>

      <div class="payment-options-wrapper" id="payment-options-wrapper">
        <div class="payment-options" id="payment-options">
          <div class="pay-option" id="card-button">Pay with Card</div>
          <div class="pay-option" id="google-button">Google Pay (Coming soon)</div>
          <div class="pay-option" id="apple-button">Apple Pay (Coming soon)</div>
        </div>

        <div class="card-section" id="card-section">
          <form id="payment-form" class="card-box">
            <div id="card-element"></div>
            <div id="card-errors" role="alert"></div>
            <button type="submit" id="submit">
              <span class="btn-text">Pay ‚Çπ1499 & Upgrade</span>
              <span class="loader" style="display: none; margin-left: 8px;">‚è≥</span>
            </button>
          </form>
        </div>

        <div class="footer-inside">
          Your payment is secure and encrypted.
        </div>
      </div>
    </div>

    <div class="global-footer">
      &copy; <%= new Date().getFullYear() %> Parking Management Software | All Rights Reserved.
    </div>

  </div>

  <script>
    const userData = localStorage.getItem('user');
    const token = localStorage.getItem('authToken');
    if (!token) {
      alert('Please log in first.');
      window.location.href = '/login';
    }

    const stripe = Stripe('<%= STRIPE_PUBLIC_KEY %>');
    const elements = stripe.elements();
    const cardElement = elements.create("card");
    cardElement.mount("#card-element");

    const cardBtn = document.getElementById("card-button");
    const googleBtn = document.getElementById("google-button");
    const appleBtn = document.getElementById("apple-button");
    const cardSection = document.getElementById("card-section");
    const paymentOptions = document.getElementById("payment-options");

    cardBtn.addEventListener("click", () => {
      const isActive = cardBtn.classList.contains("active");

      // Toggle card section
      if (isActive) {
        cardSection.classList.remove("active");
        cardBtn.classList.remove("active");
        googleBtn.style.display = "block";
        appleBtn.style.display = "block";
      } else {
        cardBtn.classList.add("active");
        cardSection.classList.add("active");
        googleBtn.style.display = "none";
        appleBtn.style.display = "none";
      }
    });

    googleBtn.addEventListener("click", () => {
      resetOptions();
    });

    appleBtn.addEventListener("click", () => {
      resetOptions();
    });

    function resetOptions() {
      // Hide card section
      cardSection.classList.remove("active");
      cardBtn.classList.remove("active");

      // Show all options
      cardBtn.style.display = "block";
      googleBtn.style.display = "block";
      appleBtn.style.display = "block";
    }

    const form = document.getElementById("payment-form");

    let user = {};
    try {
      user = JSON.parse(userData);
    } catch (e) {
      console.error("User data parse error:", e);
      alert("Invalid user data. Please log in again.");
      window.location.href = "/login";
    }
    const customerEmail = user.email;

    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const submitBtn = document.getElementById("submit");
      submitBtn.disabled = true;
      const btnText = submitBtn.querySelector(".btn-text");
      const loader = submitBtn.querySelector(".loader");
      btnText.textContent = "Processing...";
      loader.style.display = "inline";

      const { paymentMethod, error } = await stripe.createPaymentMethod({
        type: "card",
        card: cardElement,
        billing_details: { email: customerEmail }
      });

      if (error) {
        document.getElementById("card-errors").textContent = error.message;
        submitBtn.disabled = false;
        btnText.textContent = "Pay ‚Çπ1499 & Upgrade";
        loader.style.display = "none";
        return;
      }

      const res = await fetch("/api/subscriptions/subscribe-plan", {
        method: "POST",
        headers: { "Content-Type": "application/json", 'Authorization': token },
        body: JSON.stringify({
          paymentMethodId: paymentMethod.id,
          customerEmail,
          plan: "premium"
        })
      });

      const result = await res.json();

      if (result.statusCode === 200) {
        alert(`Subscription successful! Subscription ID: ${result.data.subscriptionId}`);
        localStorage.setItem("subscriptionId", result.data.subscriptionId);
        setTimeout(() => { window.location.href = '/dashboard'; }, 10000);
      } else {
        alert("Something went wrong!");
        submitBtn.disabled = false;
        btnText.textContent = "Pay ‚Çπ1499 & Upgrade";
        loader.style.display = "none";
        console.error(result.data.msg);
      }
    });

    function logoutUser() {
      const token = localStorage.getItem('authToken');

      if (!confirm("Are you sure you want to log out?")) return;

      fetch('/api/auth/user/logout', {
        method: 'POST',
        headers: {
          'Authorization': token
        }
      })
        .then(res => {
          localStorage.removeItem('authToken');
          localStorage.removeItem('user');
          window.location.href = '/';
        })
        .catch(err => {
          console.error("Logout error:", err);
          alert("Something went wrong.");
        });
    }

  </script>
</body>

</html>